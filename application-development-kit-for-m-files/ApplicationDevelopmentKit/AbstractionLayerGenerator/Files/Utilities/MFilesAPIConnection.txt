//------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------------

using System;
using System.Linq;

using MFilesAPI;

namespace ?namespace
{
	public static class MFilesAPIConnection
	{
		private static Vault _vault;
		public static Vault Vault {
			get {
				if (_vault == null || !_vault.LoggedIn)
					Connect();
				return _vault;
			}
			set {
				_vault = value;
			}
		}
		public static MFilesServerApplication Server;
		public static bool Connect(string vaultGUID = "?guid", string host = "?host")
		{
			Server = new MFilesServerApplication();
			Server.Connect(?authType, "?user", "?passwd",
				"?domain", null, host, null, "", true);
			_vault = Server.LogInToVault(vaultGUID);
			return true;
		}
	}
	//
	public class MFilesConnection
	{
		public Vault Vault { get; set; }
	}
	public class MFilesServerConnection : MFilesConnection, IDisposable
	{
		public MFilesServerApplication Server { get; set; }
		public bool TryConnect(string vaultGUID = "?guid", string host = "?host")
		{
			Server = new MFilesServerApplication();
			Server.Connect(?authType, "?user", "?passwd", "null", null, host, null, "", true);
			Vault = Server.LogInToVault(vaultGUID);
			MFilesAPIConnection.Vault = Vault;
			return true;
		}
		public void Dispose()
		{
			if (Vault.LoggedIn) {
				Vault.LogOutSilent();
				Vault = null;
			}
			Server.Disconnect();
			Server = null;
		}
	}
	public class MFilesClientConnection : MFilesConnection, IDisposable
	{
		public MFilesClientApplication Client { get; set; }
		public bool TryConnect(string vaultGUID = "?guid", string host = "?host")
		{
			Client = new MFilesClientApplication();
			Vault = Client.GetVaultConnectionsWithGUID(vaultGUID)
				.Cast<VaultConnection>()
				.FirstOrDefault()?
				.BindToVault(IntPtr.Zero, CanLogIn: true, ReturnNULLIfCancelledByUser: true);

			return true;
		}
		public void Dispose()
		{
			if (Vault.LoggedIn) {
				Vault.LogOutSilent();
				Vault = null;
			}
			Client = null;
		}
	}
}